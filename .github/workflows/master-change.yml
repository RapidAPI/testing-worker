name: Release and publishing version specific packages

on:
  push:
    branches:
      - master

jobs:
  node-run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "v14.15.4"
      - run: yarn install --frozen-lockfile
      - run: yarn jest
      - run: yarn check-format
      - run: yarn lint

  npm-publish-package:
    needs: [node-run-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "v14.15.4"
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN_NPM }}
          registry: https://registry.npmjs.org/
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.ACTIONS_ACCESS_KEY }}
          registry: https://npm.pkg.github.com

  make-release:
    needs: [npm-publish-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "v14.15.4"
      - run: yarn install --frozen-lockfile
      - name: Get version number
        uses: ./.github/actions/get-version
        id: get_package_version
      - name: Create a Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-v${{ steps.get_package_version.outputs.package_version }}
          release_name: Release v${{ steps.get_package_version.outputs.package_version }}
          body: This release was generated for commit ${{ github.sha }}
          draft: false
          prerelease: false

  lambda-build-worker-zip:
    needs: [node-run-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: v14.15.4
          registry-url: https://registry.npmjs.org
          scope: "@rapidapi"

      - name: Prepare worker_dist directory
        run: |
          cp -R ./ ../dist
      - name: Install node packages
        run: cd ../dist && yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{secrets.ACTIONS_ACCESS_KEY}}
      # Kind of a hack to avoid recursively copying the dist folder
      - name: Move dist folder down
        run: mv ../dist dist
      - name: Zip dist
        run: zip -rq worker.zip dist/*
      - name: Upload the zipped worker
        uses: actions/upload-artifact@v2
        with:
          name: zipped_worker
          path: worker.zip

  docker-build-push-worker:
    needs: [node-run-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.worker
          push: true
          tags: rapidapicloud/testing-worker:latest
####################################################################################
############################## DEPLOY TO REGIONS ###################################
####################################################################################
  lambda-upload-zip-to-aws:
    strategy:
      matrix:
        region: [us-east-1, us-west-2, ap-south-1, ap-southeast-1, ap-northeast-1, eu-central-1, eu-west-3, sa-east-1]
    runs-on: ubuntu-latest
    needs: 
      - lambda-build-worker-zip
    steps:
      - name: Download the zipped worker
        uses: actions/download-artifact@v2
        with:
          name: zipped_worker
####################################################################################
      - name: Deploy worker to production => (${{ matrix.regions }})
        uses: appleboy/lambda-action@v0.1.5
        with:
          aws_access_key_id: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}
          aws_region: ${{ matrix.region }}
          function_name: rapidapi-prod-testing-worker
          zip_file: worker.zip
          handler: dist/src/main.execute
          description: "aws:states:opt-out"

